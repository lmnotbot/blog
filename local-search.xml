<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/blog/2025/03/07/Python%E5%9F%BA%E7%A1%80/"/>
    <url>/blog/2025/03/07/Python%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><h3 id="位置参数"><a href="#位置参数" class="headerlink" title="位置参数"></a>位置参数</h3><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">greet</span>(<span class="hljs-params">name, age</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Hello, my name is <span class="hljs-subst">&#123;name&#125;</span> and I am <span class="hljs-subst">&#123;age&#125;</span> years old.&quot;</span>)<br><br>greet(<span class="hljs-string">&quot;Alice&quot;</span>, <span class="hljs-number">30</span>)<br></code></pre></td></tr></table></figure><ul><li><p><strong>顺序很重要</strong>：位置参数的顺序必须与函数定义中的参数顺序一致。</p></li><li><p><strong>必须提供</strong>：调用时，必须提供与位置参数相同数量的实参，除非有默认值的参数。</p></li></ul><h3 id="关键词参数"><a href="#关键词参数" class="headerlink" title="关键词参数"></a>关键词参数</h3><p>示例：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">def greet(name, age, city):<br>    <span class="hljs-built_in">print</span>(f<span class="hljs-string">&quot;Hello, my name is &#123;name&#125;, I am &#123;age&#125; years old, and I live in &#123;city&#125;.&quot;</span><br>greet(<span class="hljs-attribute">age</span>=30, <span class="hljs-attribute">city</span>=<span class="hljs-string">&quot;New York&quot;</span>, <span class="hljs-attribute">name</span>=<span class="hljs-string">&quot;Alice&quot;</span>)<br></code></pre></td></tr></table></figure><ul><li><p><strong>位置参数必须先于关键词参数</strong>：如果函数同时使用了位置参数和关键词参数，那么位置参数必须在关键词参数之前提供。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">greet</span>(<span class="hljs-params">name, age, city</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Hello, my name is <span class="hljs-subst">&#123;name&#125;</span>, I am <span class="hljs-subst">&#123;age&#125;</span> years old, and I live in <span class="hljs-subst">&#123;city&#125;</span>.&quot;</span>)<br></code></pre></td></tr></table></figure><p>正确的调用：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">greet(<span class="hljs-string">&quot;Alice&quot;</span>, <span class="hljs-attribute">age</span>=30, <span class="hljs-attribute">city</span>=<span class="hljs-string">&quot;New York&quot;</span>)<br></code></pre></td></tr></table></figure><p>错误的调用（报错）：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">greet(<span class="hljs-attribute">name</span>=<span class="hljs-string">&quot;Alice&quot;</span>, 30, <span class="hljs-attribute">city</span>=<span class="hljs-string">&quot;New York&quot;</span>)<br></code></pre></td></tr></table></figure></li><li><p><strong>默认值和关键词参数同时使用</strong>：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">def greet(name, <span class="hljs-attribute">age</span>=25, <span class="hljs-attribute">city</span>=<span class="hljs-string">&quot;Unknown&quot;</span>):<br>    <span class="hljs-built_in">print</span>(f<span class="hljs-string">&quot;Hello, my name is &#123;name&#125;, I am &#123;age&#125; years old, and I live in &#123;city&#125;.&quot;</span>)<br><br>greet(<span class="hljs-string">&quot;Alice&quot;</span>)  <br>greet(<span class="hljs-string">&quot;Bob&quot;</span>, <span class="hljs-attribute">city</span>=<span class="hljs-string">&quot;Los Angeles&quot;</span>)<br></code></pre></td></tr></table></figure></li></ul><h3 id="args"><a href="#args" class="headerlink" title="*args"></a>*args</h3><p><em>args是可以传任意多个参数进来，它会把传入的参数*<em>打包成一个Tuple数组</em></em>，它的关键点不在于args这个参数名，而是前边的*,args也可以叫其他的名字</p><p>某些场景常用，比如计算传入的参数的数量</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stata">def sum_numbers(*<span class="hljs-keyword">args</span>):<br>    <span class="hljs-keyword">total</span> = 0<br>    <span class="hljs-keyword">for</span> number <span class="hljs-keyword">in</span> <span class="hljs-keyword">args</span>:<br>        <span class="hljs-keyword">total</span> += number<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">total</span><br></code></pre></td></tr></table></figure><h3 id="kwargs"><a href="#kwargs" class="headerlink" title="**kwargs"></a>**kwargs</h3><p>使用**kwarg需要传入关键词参数（name&#x3D;“小明”，age&#x3D;23，sex&#x3D;“男”）， <strong>只能接收关键字参数，不能接收位置参数</strong></p><p>调用时传入的任意数量的<strong>关键字参数</strong>统统收集起来，<strong>整理成一个字典（dict）</strong></p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">show_person_info</span>(<span class="hljs-params">**kwargs</span>):<br>    <span class="hljs-keyword">for</span> key, value <span class="hljs-keyword">in</span> kwargs.items():<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;key&#125;</span>: <span class="hljs-subst">&#123;value&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">show_person_info(<span class="hljs-attribute">name</span>=<span class="hljs-string">&quot;小明&quot;</span>, <span class="hljs-attribute">age</span>=20, <span class="hljs-attribute">city</span>=<span class="hljs-string">&quot;北京&quot;</span>)<br></code></pre></td></tr></table></figure><p>**这里传入的 name&#x3D;“小明”、age&#x3D;20、city&#x3D;“北京” 就会被 **kwargs 收集起来，变成字典 {“name”: “小明”, “age”: 20, “city”: “北京”}**，然后在函数内部，通过遍历这个字典，把每个键值对都打印出来，展示出这个人的详细信息。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/blog/2025/03/07/hello-world/"/>
    <url>/blog/2025/03/07/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
